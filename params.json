{"name":"Gandalf","tagline":"Easily notify a user with a simple alert, inform them of an optional update, and in dire situations block the user from accessing older versions of the application completely.","body":"# Gandalf [![Build Status](https://travis-ci.org/btkelly/gandalf.svg?branch=master)](https://travis-ci.org/btkelly/gandalf) <a href=\"http://www.detroitlabs.com/\"><img src=\"https://img.shields.io/badge/Sponsor-Detroit%20Labs-000000.svg\" /></a> [ ![Download](https://api.bintray.com/packages/btkelly/maven/gandalf/images/download.svg) ](https://bintray.com/btkelly/maven/gandalf/_latestVersion) [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Gandalf-green.svg?style=true)](https://android-arsenal.com/details/1/3127)\r\n\r\nIn the lifetime of any application there will come a time where you need to drop support for a feature, end of life a product, notify about maintenance, any number of other reasons, Gandalf is here to help!\r\n\r\nGandalf will easily add a check to a remote file that can notify a user with a simple alert, inform them of an optional update, and in dire situations block the user from accessing older versions of the application completely (**ex:**security vulnerability has been found).\r\n\r\n## Usage\r\n\r\nThe goal of Gandalf was to add this basic boiler plate code to any application quickly. You will need to add the following code to your application as well as host a JSON file on a publicly accessible server with the format included below.\r\n\r\n#### Application Class\r\n\r\nExtend the Android [`Application`](http://developer.android.com/reference/android/app/Application.html) class and add the following to the `onCreate()`\r\n\r\n```java\r\npublic class CustomApplication extends Application {\r\n\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        new Gandalf.Installer()\r\n                .setContext(this)\r\n                .setPackageName(\"com.my.package\")\r\n                .setBootstrapUrl(\"http://www.example.com/bootstrap.json\")\r\n                .install();\r\n    }\r\n}\r\n```\r\n\r\n#### Splash Activity\r\n\r\nExtend `GandalfActivity` for use as your main \"Splash\" type activity, this is where the magic will happen. Just provide a layout resource id to display while the bootstrap file is being checked and implement the `youShallPass()` method with what should happen after a successful check.\r\n\r\n```java\r\npublic class SplashActivity extends GandalfActivity {\r\n\r\n    @Override\r\n    public void youShallPass() {\r\n        //After a successful bootstrap check we change the content view, you may also load a new activity or do whatever logic you want after the check is complete.\r\n        setContentView(R.layout.activity_splash_finished_loading);\r\n    }\r\n\r\n    @Override\r\n    public int contentView() {\r\n        //While the bootstrap check is running we provide a layout to be displayed\r\n        return R.layout.activity_splash_loading;\r\n    }\r\n}\r\n```\r\n\r\n#### Manifest Changes\r\n\r\nAdd the `android:name` attribute to the `application` tag and specify the path to your custom [`Application`](http://developer.android.com/reference/android/app/Application.html) class from above and set your `SplashActivity` as the entry point for your app. \r\n\r\n```xml\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"io.github.btkelly.gandalf.example\">\r\n\r\n    <application\r\n        android:name=\".CustomApplication\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:theme=\"@style/AppTheme\">\r\n\r\n        <activity\r\n            android:name=\".SplashActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n    </application>\r\n\r\n</manifest>\r\n```\r\n\r\n#### JSON File\r\n\r\nYou must host a JSON file remotely and set the URL of this file in the the Gandalf installer. The JSON file must match the following format and use the Android `versionCode` not the `versionName` for version information.\r\n\r\n```json\r\n{\r\n  \"android\": {\r\n    \"alert\": {\r\n      \"message\": \"We are currently performing server maintenance. Please try again later.\",\r\n      \"blocking\": true\r\n    },\r\n    \"optionalUpdate\": {\r\n      \"optionalVersion\": \"6\",\r\n      \"message\": \"A new version of the application is available, please click below to update to the latest version.\"\r\n    },\r\n    \"requiredUpdate\": {\r\n      \"minimumVersion\": \"7\",\r\n      \"message\": \"A new version of the application is available and is required to continue, please click below to update to the latest version.\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\nThat's all that's needed to get Gandalf up and running using the basic settings.\r\n \r\nIf extending `GandalfActivity` doesn't work for you the `Gandalf` class can be used directly by calling `shallIPass(GandalfCallback callback)`. In this case make sure you respond to the callback methods and make a call to `gandalf.save(Alert alert)` and `gandalf.save(OptionalUpdate optionalUpdate)` if not using the `BootstrapDialogUtil` for your UI.\r\n\r\n## Example App\r\n\r\nIncluded in the source is a simple example application showing four different launch states based on a remote file. You can load and relaunch the app with each scenario by selecting an option in the Android menu.\r\n\r\n## License\r\n\r\nCopyright 2016 Bryan Kelly\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not\r\nuse this file except in compliance with the License.\r\n\r\nYou may obtain a copy of the License at\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\nLicense for the specific language governing permissions and limitations\r\nunder the License.\r\n","google":"UA-73153943-1","note":"Don't delete this file! It's used internally to help with page regeneration."}